{"version":3,"sources":["Redux/Reducer.js","Redux/store.js","config/baseurl.js","Page/Home.js","Page/Quiz/MultipleChoice.js","Page/Quiz.js","Page/Contact.js","Page/Router.js","Redux/Action.js","App.js","reportWebVitals.js","index.js","Redux/ActionTypes.js"],"names":["actionTypes","require","initalStateNav","nav_fetching","nav_fetched","nav_fetch_error","nav_data","nav_dataLength","initialStateMultipleChoice","multiple_choice_fetching","multiple_choice_fetched","multiple_choice_fetch_error","multiple_choice_data","multiple_choice_dataLength","reducer","combineReducers","reducerMainNav","state","action","type","MAIN_NAV_START_FETCHING","fetching","MAIN_NAV_FETCHED","data","length","MAIN_NAV_FETCH_ERROR","error","reducerMultipleChoice","MULTIPLE_CHOICE_START_FETCHING","MULTIPLE_CHOICE_FETCHED","MULTIPLE_CHOICE_FETCH_ERROR","middleware","applyMiddleware","thunk","createLogger","store","createStore","baseurl","Home","MultipleChoice","useSelector","useState","locData","setLocData","useEffect","date","Date","arr","map","item","push","uid","uuid","nid","ans","field_answer","ans_given","getTime","localStorage","setItem","JSON","stringify","handleChanage","e","target","value","name","quiz","parse","getItem","console","log","className","dangerouslySetInnerHTML","__html","field_multiple_choice_questions","field_option_one","onChange","field_option_two","field_option_three","field_option_four","onClick","axios","post","url","headers","method","target_id","target_type","title","body","format","then","res","catch","err","Quiz","Contact","Router","dispatch","useDispatch","NavRemote","NAV","window","location","origin","MultipleChoiceRemote","get","fetched","actionAll","to","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b74db4a9.chunk.js","sourcesContent":["const { actionTypes } = require('./ActionTypes');\n\n\n/** NAVIGATION */\nconst initalStateNav = {  \n  nav_fetching: false,\n  nav_fetched: false,\n  nav_fetch_error: '',\n  nav_data: [],\n  nav_dataLength: 0,\n}\n\nexport const reducerMainNav = (state = initalStateNav, action) => {\n\n  switch (action.type) {\n\n    case actionTypes.MAIN_NAV_START_FETCHING:\n      return {\n        fetching: true,\n        nav_data: []\n      }\n    case actionTypes.MAIN_NAV_FETCHED:\n      return {\n        nav_data: action.data,\n        nav_fetched: true,\n        nav_dataLength: action.data.length\n      }\n    case actionTypes.MAIN_NAV_FETCH_ERROR:\n      return {\n        nav_fetched: false,\n        nav_fetching: false,\n        nav_fetch_error: action.error\n      }\n    \n    /** default state */\n    default:\n      return state;\n  }\n\n}\n\n/** MULTIPLE CHOICE QUESTION */\nconst initialStateMultipleChoice = {\n multiple_choice_fetching: false,\n multiple_choice_fetched: false,\n multiple_choice_fetch_error: '',\n multiple_choice_data: [],\n multiple_choice_dataLength: 0\n}\n\nexport const reducerMultipleChoice = (state = initialStateMultipleChoice, action) => {\n  \n  switch(action.type){\n\n    case actionTypes.MULTIPLE_CHOICE_START_FETCHING:\n      return {\n        multiple_choice_fetching: true,\n        multiple_choice_data: []\n      }\n    case actionTypes.MULTIPLE_CHOICE_FETCHED:\n      return {\n        multiple_choice_data: action.data,\n        multiple_choice_fetched: true,\n        multiple_choice_dataLength: action.data.length\n      }\n    case actionTypes.MULTIPLE_CHOICE_FETCH_ERROR:\n      return {\n        multiple_choice_fetched: false,\n        multiple_choice_fetching: false,\n        multiple_choice_fetch_error: action.error\n      }\n      /** default state */\n      default:\n        return state;\n  }\n}\n\n\n/** ABOUT PAGE */\nconst initialStateAbout = {\n  about_fetching: false,\n  about_fetched: false,\n  about_fetch_error: '',\n  about_data: [],\n  about_dataLength: 0\n}\n\nexport const reducerAboutPage = (state = initialStateAbout, action) => {\n  \n  switch(action.type){\n\n    case actionTypes.ABOUT_START_FETCHING:\n      return {\n        fetching: true,\n        about_data: []\n      }\n    case actionTypes.ABOUT_FETCHED:\n      return {\n        about_data: action.data,\n        about_fetched: true,\n        about_dataLength: action.data.length\n      }\n    case actionTypes.ABOUT_FETCH_ERROR:\n      return {\n        about_fetched: false,\n        about_fetching: false,\n        about_fetch_error: action.error\n      }\n       /** default state */\n      default:\n        return state;\n  }\n}\n\n\n/** FOOD MENU PAGE */\nconst initialStateFoodMenu = {\n  food_menu_fetching: false,\n  food_menu_fetched: false,\n  food_menu_fetch_error: '',\n  food_menu_data: [],\n  food_menu_dataLength: 0\n}\n\nexport const reducerFoodMenu = (state = initialStateFoodMenu, action) => {\n  \n  switch(action.type){\n\n    case actionTypes.FOOD_MENU_START_FETCHING:\n      return {\n        food_menu_fetching: true,\n        food_menu_data: []\n      }\n    case actionTypes.FOOD_MENU_FETCHED:\n      return {\n        food_menu_data: action.data,\n        food_menu_fetched: true,\n        food_menu_dataLength: action.data.length\n      }\n    case actionTypes.FOOD_MENU_FETCH_ERROR:\n      return {\n        food_menu_fetched: false,\n        food_menu_fetching: false,\n        food_menu_fetch_error: action.error\n      }\n       /** default state */\n      default:\n        return state;\n  }\n}\n\n\n\n/** FOOD MENU TAXANOMY TERM  */\nconst initialStateFoodMenuTxnTerm = {\n  food_menu_txn_term_fetching: false,\n  food_menu_txn_term_fetched: false,\n  food_menu_txn_term_fetch_error: '',\n  food_menu_txn_term_data: [],\n  food_menu_txn_term_dataLength: 0\n}\n\nexport const reducerFoodMenuTxnTerm = (state = initialStateFoodMenuTxnTerm, action) => {\n\n  switch(action.type){\n\n    case actionTypes.FOOD_MENU_TXN_TERM_START_FETCHING:\n      return {\n        food_menu_txn_term_fetching: true,\n        food_menu_txn_term_data: []\n      }\n    case actionTypes.FOOD_MENU_TXN_TERM_FETCHED:\n      return {\n        food_menu_txn_term_data: action.data,\n        food_menu_txn_term_fetched: true,\n        food_menu_txn_term_dataLength: action.data.length\n      }\n    case actionTypes.FOOD_MENU_TXN_TERM_FETCH_ERROR:\n      return {\n        food_menu_txn_term_fetched: false,\n        food_menu_txn_term_fetching: false,\n        food_menu_txn_term_fetch_error: action.error\n      }\n       /** default state */\n      default:\n        return state;\n  }\n}\n\n\n\n/** FOOD MENU BG */\nconst initialStateFoodMenuBg = {\n  food_menu_bg_fetching: false,\n  food_menu_bg_fetched: false,\n  food_menu_bg_fetch_error: '',\n  food_menu_bg_data: [],\n  food_menu_bg_dataLength: 0\n}\n\nexport const reducerFoodMenuBg = (state = initialStateFoodMenuBg, action) => {\n\n  switch(action.type){\n\n    case actionTypes.FOOD_MENU_BG_START_FETCHING:\n      return {\n        food_menu_bg_fetching: true,\n        food_menu_bg_data: []\n      }\n    case actionTypes.FOOD_MENU_BG_FETCHED:\n      return {\n        food_menu_bg_data: action.data,\n        food_menu_bg_fetched: true,\n        food_menu_bg_dataLength: action.data.length\n      }\n    case actionTypes.FOOD_MENU_BG_FETCH_ERROR:\n      return {\n        food_menu_bg_fetched: false,\n        food_menu_bg_fetching: false,\n        food_menu_bg_fetch_error: action.error\n      }\n       /** default state */\n      default:\n        return state;\n  }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport {\n  reducerMainNav, \n  reducerMultipleChoice\n  \n} from './Reducer';\n\nconst reducer = combineReducers(\n  {\n    // reducerFetchData,\n    reducerMainNav,\n    reducerMultipleChoice\n  }\n);\n\nconst middleware = applyMiddleware(thunk, createLogger());\n\nexport const store = createStore(reducer, middleware);\n","export const baseurl = {\n    URL: \"https://yellow-website.com/d9-quiz\"\n}","import React from 'react'\n\nfunction Home() {\n  return (\n    <div>\n      Home page\n    </div>\n  )\n}\n\nexport default Home\n","import {useSelector} from 'react-redux';\nimport {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport {baseurl} from '../../config/baseurl'\n\n\nfunction MultipleChoice() {\n\n  /** AXIOS POST PROCEDURE \n   * \n   * 1 - QUIZ test data store in to localStorage\n   * 2 - Update QUIZ data in localStorage on Change of individual input answer\n   * 3 - On Submit post localStorage data in to D9 Database \n   * \n  */\n\n  const data = useSelector(state => state.reducerMultipleChoice.multiple_choice_data);\n  const [locData, setLocData] = useState([]);\n  \n  useEffect(()=>{\n\n    const date = new Date();\n    const arr = [];\n    //push data into array \"arr\" into quiz test entry format\n    data.length > 0 &&\n    data.map(item=>{\n      return arr.push(\n        { uid: item.uid, \n          uuid: item.uuid, \n          nid: item.nid, \n          ans: item.field_answer, \n          ans_given: \"\",\n          date: date.getTime() })\n    })\n    /**\n     * if localStorage data is empty only store arr data in to localStorage\n     * else it will store handleChanged data\n     * */\n    localStorage.setItem(\"quiz\", JSON.stringify(arr))\n\n  },[data])\n  \n  //UPDATE QUIZ on localStorage onChange\n  const handleChanage = (e) => {\n    const ans_given = e.target.value;\n    const name = e.target.name;\n    //update localStorage\n    const quiz = JSON.parse(localStorage.getItem(\"quiz\"));\n    quiz.map(item =>{\n      if(item.nid === name){\n        item.ans_given = ans_given\n      }\n      return item;\n    })\n    localStorage.setItem(\"quiz\", JSON.stringify(quiz))\n    setLocData(JSON.parse(localStorage.getItem('quiz')));  \n  }\n\n  const handleSubmit = () => {\n\n    const data = {\n      type: [{\n        target_id: 'article',\n        target_type: 'node_type',\n      }],\n      title: [{\n        value: \"data title\",\n      }],\n      body: [{\n        value: \"data body\",\n        format: 'plain_text',\n      }],\n    }\n\n    axios.post({\n      url:`${baseurl.URL}/node`,\n      headers: {'X-CSRF-Token': `${baseurl.URL}/session/token`},\n      method: 'POST',\n      data: data\n    })\n    .then(res=>console.log(res.data))\n    .catch(err=>console.log(err))\n\n    console.log(\"handle submited\");\n  }\n\n  console.log(locData);\n  localStorage.setItem(\"locData\", JSON.stringify(locData));\n\n  return (\n    <div>\n      <h1>Mulitple Choice</h1>\n      {\n        data.length > 0 &&\n        data.map(item=>{\n          return <div className=\"p-3\" key={item.uuid}> \n            <div dangerouslySetInnerHTML={{__html: item.field_multiple_choice_questions}} />\n            \n              <div className=\"flex p-3\">\n                <div  dangerouslySetInnerHTML={{__html: item.field_option_one}} /> \n                <input className=\"mt-2 ml-3\" \n                type=\"radio\" \n                name={item.nid} \n                value=\"1\" \n                \n                onChange={handleChanage}\n                />\n              </div>\n              <div className=\"flex p-3\">\n                <div  dangerouslySetInnerHTML={{__html: item.field_option_two}} /> \n                <input className=\"mt-2 ml-3\" \n                type=\"radio\" \n                name={item.nid} \n                value=\"2\" \n                onChange={handleChanage}\n\n                />\n              </div>\n              <div className=\"flex p-3\">\n                <div  dangerouslySetInnerHTML={{__html: item.field_option_three}} /> \n                <input className=\"mt-2 ml-3\" \n                type=\"radio\" \n                name={item.nid} \n                value=\"3\"\n                onChange={handleChanage} \n                />\n              </div>\n              <div className=\"flex p-3\">\n                <div  dangerouslySetInnerHTML={{__html: item.field_option_four}} /> \n                <input className=\"mt-2 ml-3\" \n                type=\"radio\" \n                name={item.nid} \n                value=\"4\" \n                onChange={handleChanage}\n                />\n              </div>\n            \n          </div>\n        })\n      }\n      <div><div onClick={handleSubmit}>submit</div></div>\n    </div>\n  )\n}\n\nexport default MultipleChoice","import React from 'react'\nimport MultipleChoice from './Quiz/MultipleChoice'\n\nfunction Quiz() {\n  return (\n    <div>\n      <MultipleChoice />\n    </div>\n  )\n}\n\nexport default Quiz\n","\nimport axios from 'axios';\nimport React from 'react'\nimport {baseurl} from '../config/baseurl';\n\nfunction Contact() {\n\n\n  const handleSubmit = () => {\n    console.log(\"webform contact handle submit\");\n    const message = {\n      \"webform_id\" : \"contact\",\n      \"name\" : \"Test\",\n      \"subject\" : \"123456789\",\n      \"message\" : \"Hello\"\n  }\n\n  axios(`${baseurl.URL}/webform_rest/submit?_format=json`, {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    data: message\n  })\n  .then(res=>console.log(res))\n  .catch(err=>console.log(err))\n  }\n\n  \n  return (\n    <div>\n      <h1>Contact form</h1>\n      <div onClick={handleSubmit}>Submit</div>\n    </div>\n  )\n}\n\nexport default Contact\n","import {useEffect} from 'react';\nimport {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport {actionAll} from '../Redux/Action';\nimport Home from './Home';\nimport Quiz from './Quiz';\nimport Contact from './Contact';\n\nfunction Router() {\n\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    dispatch(actionAll());\n  })\n\n  return (\n    <BrowserRouter>\n        <nav>\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/quiz\">Quiz</Link></li>\n            <li><Link to=\"/form/contact\">Contact</Link></li>\n          </ul>\n        </nav>\n\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/quiz\" component={Quiz} />\n          <Route path=\"/form/contact\" component={Contact} />\n        </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default Router\n","import {actionTypes} from './ActionTypes';\nimport axios from \"axios\";\nimport { baseurl } from '../config/baseurl';\n\n\nexport const actionAll = () => {\n \n  const headers = {\n    headers: {\n    'Accept': 'application/vnd.api+json'\n    }\n  }\n\n  /**\n   * REMOTE SITE\n   * Install Module used\n   * https://www.drupal.org/project/rest_menu_items\n   * \n   * Set Permission : Access GET on Menu items per menu resource\n   * Enable : Rest UI : Rest Menu Item to GET \n   * \n   */\n  \n  /**\n   * if npm run on localhost:3000\n   * fetch data from local json file.\n   */\n  /** MAIN NAVIGATION */\n  const NavLocal = './data/mainnav.json';\n  const NavRemote = `${baseurl.URL}/api/menu_items/main`;\n  const NAV = window.location.origin === 'http://localhost:3000' \n                    ? NavLocal\n                    : NavRemote;\n\n  /** MULTIPLE CHOICE QUIZ */\n  const MultipleChoiceLocal = './data/multipleChoice.json';\n  const MultipleChoiceRemote = `${baseurl.URL}/rest/multiple-choice-question`;\n  const MultipleChoice = window.location.origin === 'http://localhost:3000' \n                    ? MultipleChoiceLocal\n                    : MultipleChoiceRemote;\n\n\n  /** ABOUT PAGE */\n  // const AboutLocal = './data/aboutpage.json';\n  // const AboutRemote = `${baseurl.URL}/rest/about`;\n  // const ABOUT = window.location.origin === 'http://localhost:3000' \n  //                   ? AboutLocal\n  //                   : AboutRemote;\n  \n\n\n  return function (dispatch) {\n\n    /** NAVIGATION */\n    dispatch({\n      type: actionTypes.MAIN_NAV_START_FETCHING\n    })\n    const reqNav = axios.get(NAV, headers)\n    reqNav.then((res) => {\n        //console.log(\"action\",res.data)\n        dispatch({\n          type: actionTypes.MAIN_NAV_FETCHED,\n          data: res.data\n        })\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.MAIN_NAV_FETCH_ERROR,\n          fetched: false,\n          error: err\n        })\n      })\n\n\n    /** MULTIPLE CHOICE QUESTION */\n    dispatch({\n      type: actionTypes.MULTIPLE_CHOICE_START_FETCHING\n    })\n    const reqMUL_CHO = axios.get(MultipleChoice, headers)\n    reqMUL_CHO.then((res) => {\n        //console.log(\"action\",res.data)\n        dispatch({\n          type: actionTypes.MULTIPLE_CHOICE_FETCHED,\n          data: res.data\n        })\n      })\n      .catch(err => {\n        dispatch({\n          type: actionTypes.MULTIPLE_CHOICE_FETCH_ERROR,\n          fetched: false,\n          error: err\n        })\n      })\n\n\n    // /** ABOUT PAGE */\n    // dispatch({\n    //   type: actionTypes.ABOUT_START_FETCHING\n    // })\n    // const reqAbout = axios.get(ABOUT, headers)\n    // reqAbout.then((res) => {\n    //    // console.log(\"action\",res.data)\n    //     dispatch({\n    //       type: actionTypes.ABOUT_FETCHED,\n    //       data: res.data\n    //     })\n    //   })\n    //   .catch(err => {\n    //     dispatch({\n    //       type: actionTypes.ABOUT_FETCH_ERROR,\n    //       fetched: false,\n    //       error: err\n    //     })\n    //   })\n\n    \n\n\n\n\n\n  }\n}","import {Provider} from 'react-redux';\nimport {store} from './Redux/store';\nimport Router from './Page/Router';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const actionTypes = {\n\n  MAIN_NAV_START_FETCHING: 'MAIN_NAV_START_FETCHING',\n  MAIN_NAV_FETCHED: 'MAIN_NAV_FETCHED',\n  MAIN_NAV_FETCH_ERROR: 'MAIN_NAV_FETCH_ERROR',\n\n  MULTIPLE_CHOICE_START_FETCHING: 'MULTIPLE_CHOICE_START_FETCHING',\n  MULTIPLE_CHOICE_FETCHED: 'MULTIPLE_CHOICE_FETCHED',\n  MULTIPLE_CHOICE_FETCH_ERROR: 'MULTIPLE_CHOICE_FETCH_ERROR',\n\n}"],"sourceRoot":""}